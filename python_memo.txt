python

乱数
import random
random.randrange(n) :0~n-1までの範囲でランダムな数値を取得

入力
line = input()　→lineは文字型に
line = int(input()) →lineをint型に

複数行入力
line = input().rstrip() →inputで入力読み込み、rstripで改行コードの処理

スペース区切りの入力をint型で受け取りリストに格納
a = list(map(int, input().split(" ")))


ループ
・whileの場合
while 条件式:
	ループ処理

・forの場合
for カウンタ変数 in 繰り返す範囲:
	ループ処理
---
ループ内かどうかはインデントの有無で決定される
for i in range(n):
	print(i)	#←ループ内
print("end")		#←ループ外
---
for i in range(10):
	print(i)
---
この場合の出力は0~9
---
for i in range(1,10):
	print(i)
---
この場合は1~9
rangeの括弧内の10は終了条件
この場合、ループを抜けた後のiの値は9

リスト
len(list) :listのデータの個数を返す
---
player_1 = "戦士"


team = ["勇者","魔法使い",100,player_1]

print(team)
---
上のコードの出力：
['勇者', '魔法使い', 100, '戦士']
---
要素の追加
appendを使用
追加した要素は末尾に追加される
list.append(追加したい要素)

要素の削除
popを使用
list.pop(削除したい要素番号)

ループでリストの要素を画面表示
for i in list:
	print(list)
上のコードでは、iにlist内の要素が順々に代入される。
例えば、上のコードでlistの中身が["a",100,"c",200]なら
出力は
a
100
c
200
となる。

team = ["勇者","戦士","魔法使い"]
for (i,person) in enumerate(team):
    
	print(str(i+1)+"番目の"+person+"が、スライムと戦った")

出力結果:
1番目の勇者が、スライムと戦った
2番目の戦士が、スライムと戦った
3番目の魔法使いが、スライムと戦った

カンマ区切り入力
line = input().rstrip().split(",")
lineはリストになり、カンマで区切られた要素が代入される

splitは括弧内の文字の所で区切るという処理であり、入力以外でも活用できる
例えば
str = "In the distance, that day, when the star become music..."
list = str.split(" ")
print(list)
の場合、出力結果は
['In', 'the', 'distance,', 'that', 'day,', 'when', 'the', 'star', 'become', 'music...']
となる

複数行データの読み込み
import sys

for line in sys.stdin.readlines():

    print(line.rstrip())


---
辞書
まとまったデータをテキスト（キー）で扱う
リストは要素番号で要素を示したが、辞書はテキスト（キー）で要素を示す
例)
dict["ボス"] = "ドラゴン"
dict["ラスボス"] = "魔王"

辞書の定義と出力
enemyDict = {"ザコ":"スライム","中ボス":"ドラゴン","ラスボス":"魔王"}

print(enemyDict)

出力結果：
{'ザコ': 'スライム', '中ボス': 'ドラゴン', 'ラスボス': '魔王'}
※定義した順番で出力されるわけではないらしい
　↓こうなることも
　{ '中ボス': 'ドラゴン', 'ラスボス': '魔王','ザコ': 'スライム'}
---
辞書の要素の削除
del dict[要素名]

辞書のループ処理
for rank in enemies:

    print(enemies[rank] + "が、あらわれた！")

出力結果：
スライムが、あらわれた！
ドラゴンが、あらわれた！
魔王が、あらわれた！
---
for (rank,enemy) in enemies.items():

    print(rank + "の" + enemy + "が、あらわれた！")

出力結果：
ザコのスライムが、あらわれた！
中ボスのドラゴンが、あらわれた！
ラスボスの魔王が、あらわれた！
---
リストの整列
weapons = ["イージスソード","ウィンドスピア","アースブレイカー","イナズマハンマー"]

print(weapons)


print(sorted(weapons))			#五十音順
print(sorted(weapons,reverse = True))	#五十音順の逆	

出力結果：
['イージスソード', 'ウィンドスピア', 'アースブレイカー', 'イナズマハンマー']
['アースブレイカー', 'イナズマハンマー', 'イージスソード', 'ウィンドスピア']
['ウィンドスピア', 'イージスソード', 'イナズマハンマー', 'アースブレイカー']

weapons2 = ["4.イージスソード","1.ウィンドスピア","3.アースブレイカー","2.イナズマハンマー"]

print(sorted(weapons2))

出力結果：
['1.ウィンドスピア', '2.イナズマハンマー', '3.アースブレイカー', '4.イージスソード']

文字コード順に整列するため、漢字が混ざると読み仮名は考慮されない

---
多次元リスト
=多次元配列

例）
team_a = ["勇者","戦士","魔法使い"]

team_b=["盗賊","忍者","商人"]

team_c=["スライム","ドラゴン","魔王"]

teams = [team_a,team_b,team_c]

print(teams)

出力結果：
[['勇者', '戦士', '魔法使い'], ['盗賊', '忍者', '商人'], ['スライム', 'ドラゴン', '魔王']]

teams = [['勇者', '戦士', '魔法使い'], ['盗賊', '忍者', '商人'], ['スライム', 'ドラゴン', '魔王']]


print(teams)

出力結果は上と同じ

teams = [["勇者","戦士"],
	 ["盗賊","忍者","商人"]
,
	 ["スライム","ドラゴン","魔王"],

	 ["魔法使い"]]
len(teams)    …　teamsの要素数を取得（この場合は４）
len(teams[0]) …　teams[0]の要素数を取得（この場合は２）

append,delも普通のリストの時と同様の使い方

numbers = [1 for i in range(10)]

print(numbers)
出力結果：
[1, 1, 1, 1, 1, 1, 1, 1, 1, 1]



